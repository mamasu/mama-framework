<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-03-04 at 17:09:38.
 */
class LanguageFileSystemTest extends PHPUnit_Framework_TestCase {

    /**
     * @var MmfLanguageFileSystem
     */
    protected $object;

    /**
     *
     * @var MmfCommunicatorInterface
     */
    protected $communicator;

    public static function setUpBeforeClass() {
        include_once __DIR__.'/../include.php';
        include_once __DIR__.'/../include.common.functions.php';
    }


    private function prepareRoutesTest($url) {
        $this->communicator = $this->getMockBuilder('CommunicationInterface')
                ->disableOriginalConstructor()
                ->setMethods(array('route', 'setRoute', 'method', 'setMethod'))
                ->getMock();

        $this->communicator->expects($this->any())
                ->method('route')
                ->willReturn($url);
        $config = $this->getMockBuilder('ParametersInterface')
            ->disableOriginalConstructor()
            ->getMock();
        $config->method('get')
            ->will($this->returnCallback('callbackConfig'));

        $this->object = new \Mmf\Language\LanguageFileSystem($this->communicator, $config);
    }


    /**
     * @covers MmfLanguageFileSystem::getTranslator
     * @covers MmfLanguageFileSystem::__construct
     * @covers MmfLanguageFileSystem::getLocaleFromRouteAndRemoveIt
     * @group translate
     * @group modules
     * @group development
     * @group production
     */
    public function testGetTranslator() {
        $this->prepareRoutesTest('/eng/asdfasdf');
        $translator = $this->object->getTranslator();
        if (in_array('TranslatorInterface',class_implements($translator))) {
            $this->assertEquals(true, true);
        } else {
            $this->assertEquals('TranslatorInterface', print_r(class_implements($translator),true));
        }
    }

    /**
     * @covers MmfLanguageFileSystem::getLocale
     * @covers MmfLanguageFileSystem::__construct
     * @covers MmfLanguageFileSystem::getLocaleFromRouteAndRemoveIt
     * @group translate
     * @group modules
     * @group development
     * @group production
     */
    public function testGetLocale() {
        $this->prepareRoutesTest('/eng/asdfasdf');
        $this->assertEquals('eng',$this->object->getLocale());
        $this->prepareRoutesTest('/spa/asdfasdf');
        $this->assertEquals('spa',$this->object->getLocale());
        $this->prepareRoutesTest('/asdfasdf');
        $this->assertEquals('spa',$this->object->getLocale());
    }

    /**
     * @covers MmfLanguageFileSystem::setLocale
     * @covers MmfLanguageFileSystem::__construct
     * @covers MmfLanguageFileSystem::getLocaleFromRouteAndRemoveIt
     * @group translate
     * @group modules
     * @group development
     * @group production
     */
    public function testSetLocale() {
        $this->prepareRoutesTest('/spa/asdfasdf');
        $this->object->setLocale('eng');
        $this->assertEquals('eng',$this->object->getLocale());
    }

}