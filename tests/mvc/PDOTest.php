<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-02-13 at 16:33:54.
 */
class PDOTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var MmfConnectionInteface
     */
    protected $connection;

    public static function setUpBeforeClass() {
        include_once __DIR__ . '/../include.php';
        include_once __DIR__ . '/../include.common.functions.php';
    }

    public function setUp() {
        $config = $this->getMockBuilder('Mmf\Parameter\ParametersInterface')
                ->disableOriginalConstructor()
                ->getMock();

        $config->method('get')
                ->will($this->returnCallback('callbackConfig'));
        $this->connection = new Mmf\MVC\PDO($config);
    }

    public function tearDown() {
        unset($this->connection);
    }

    /**
     * @group mvc
     * @group modules
     * @group development
     * @group production
     */
    public function testConnectionToDatabase() {
        $lynk = $this->connection->openConnection('db_default');
        $this->assertEquals(get_class($lynk), 'PDO');
        $this->connection->closeConnection('db_default');
    }

    /**
     * @group mvc
     * @group modules
     * @group development
     * @group production
     */
    public function testSingletoneConnectionToDatabase() {
        $lynk = $this->connection->openConnection('db_default');
        $lynkSame = $this->connection->openConnection('db_default');
        $lynkDefault = $this->connection->openConnection();
        $this->assertEquals($lynk == $lynkSame, true);
        $this->assertEquals($lynk == $lynkDefault, true);
        $this->connection->closeConnection('db_default');
    }

    /**
     * @group mvc
     * @group modules
     * @group development
     * @group production
     */
    public function testDoubleConnectiosnToDatabase() {
        $lynk = $this->connection->openConnection('db_secondary');
        $lynkSame = $this->connection->openConnection('db_secondary');
        $lynkDefault = $this->connection->openConnection();

        $this->assertEquals($lynk == $lynkSame, true);
        $this->assertEquals($lynk == $lynkDefault, false);
        $this->connection->closeConnection('db_default');
        $this->connection->closeConnection('db_secondary');
    }

}
